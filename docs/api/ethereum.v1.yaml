openapi: 3.0.1
servers:
  - url: 'http://api.cybersearch.io'
info:
  description: 'Access to Ethereum/Ethereum Classic chain entites. <br /> To choose needed chain we use <code>{chainName}</code> parameter with <code>ethereum</code> or <code>ethereum_classic</code> value in url path.'
  version: 1.0.0
  title: Cyber.Search Ethereum API
tags:
  - name: ethereum
    description: Access to Ethereum/Ethereum Classic chain entites
paths:

  '/{chainName}/block/{blockNumber}':
    get:
      tags:
        - ethereum
      summary: Find ethereum block by number
      description: Returns a block
      operationId: getBlockByNumber
      parameters:
        - name: chainName
          in: path
          description: Chain name
          required: true
          schema:
            type: string
            enum:
              - ethereum
              - ethereum_classic
        - name: blockNumber
          in: path
          description: Number of the block
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'Block found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EthereumBlock'
        '400':
          description: 'Invalid block number supplied'
        '404':
          description: 'Block not found'


  '/{chainName}/block/{blockNumber}/transactions':
    get:
      tags:
        - ethereum
      summary: 'Download block transactions'
      description: Returns a block transactions
      operationId: getBlockTransactionsByBlockNumber
      parameters:
        - name: chainName
          in: path
          description: Chain name
          required: true
          schema:
            type: string
            enum:
              - ethereum
              - ethereum_classic
        - name: blockNumber
          in: path
          description: Number of the block
          required: true
          schema:
            type: integer
            format: int64
        - name: pageSize
          in: query
          description: 'Size of the page'
          required: false
          schema:
            type: integer
            format: int32
            minimum: 0
            default: 20
        - name: page
          in: query
          description: 'Result set page number (starts from 0)'
          required: false
          schema:
            type: integer
            format: int32
            minimum: 0
            default: 0
      responses:
        '200':
          description: 'Block transactions found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EthereumBlockTx'
        '400':
          description: "Invalid 'blockNumber', 'page' or 'pageSize' parameters"
        '404':
          description: 'Block not found'


  '/{chainName}/contract/{hash}':
    get:
      tags:
        - ethereum
      summary: 'Find ethereum contract info by contract hash'
      description: 'Returns an contract info'
      operationId: getContract
      parameters:
        - name: chainName
          in: path
          description: Chain name
          required: true
          schema:
            type: string
            enum:
              - ethereum
              - ethereum_classic
        - name: hash
          in: path
          description: 'Contract hash'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Contract found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EthereumContract'
        '400':
          description: "Invalid hash supplied"
        '404':
          description: 'Contract not found'

  '/{chainName}/contract/{hash}/transactions':
    get:
      tags:
        - ethereum
      summary: 'Download contract transactions'
      description: Returns an contract transactions sorted by time (most recent first)
      operationId: getContractTransactionsByContractHash
      parameters:
        - name: chainName
          in: path
          description: Chain name
          required: true
          schema:
            type: string
            enum:
              - ethereum
              - ethereum_classic
        - name: hash
          in: path
          description: 'Contract hash'
          required: true
          schema:
            type: string
        - name: pageSize
          in: query
          description: 'Size of the page'
          required: false
          schema:
            type: integer
            format: int32
            minimum: 0
            default: 20
        - name: page
          in: query
          description: 'Result set page number (starts from 0)'
          required: false
          schema:
            type: integer
            format: int32
            minimum: 0
            default: 0
      responses:
        '200':
          description: 'Contract transactions found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EthereumContractTx'
        '400':
          description: "Invalid 'hash', 'page' or 'pageSize' parameters"
        '404':
          description: 'Contract not found'

  '/{chainName}/contract/{hash}/blocks':
    get:
      tags:
        - ethereum
      summary: 'Download contract blocks'
      description: Returns an contract blocks sorted by time (most recent first)
      operationId: getContractBlocksByContractHash
      parameters:
        - name: chainName
          in: path
          description: Chain name
          required: true
          schema:
            type: string
            enum:
              - ethereum
              - ethereum_classic
        - name: hash
          in: path
          description: 'Contract hash'
          required: true
          schema:
            type: string
        - name: pageSize
          in: query
          description: 'Size of the page'
          required: false
          schema:
            type: integer
            format: int32
            minimum: 0
            default: 20
        - name: page
          in: query
          description: 'Result set page number (starts from 0)'
          required: false
          schema:
            type: integer
            format: int32
            minimum: 0
            default: 0
      responses:
        '200':
          description: 'Contract blocks found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EthereumContractBlock'
        '400':
          description: "Invalid 'hash', 'page' or 'pageSize' parameters"
        '404':
          description: 'Contract not found'

  '/{chainName}/contract/{hash}/uncles':
    get:
      tags:
        - ethereum
      summary: 'Download contract uncles'
      description: Returns an contract uncles sorted by time (most recent first)
      operationId: getContractUnclesByContractHash
      parameters:
        - name: chainName
          in: path
          description: Chain name
          required: true
          schema:
            type: string
            enum:
              - ethereum
              - ethereum_classic
        - name: hash
          in: path
          description: 'Contract hash'
          required: true
          schema:
            type: string
        - name: pageSize
          in: query
          description: 'Size of the page'
          required: false
          schema:
            type: integer
            format: int32
            minimum: 0
            default: 20
        - name: page
          in: query
          description: 'Result set page number (starts from 0)'
          required: false
          schema:
            type: integer
            format: int32
            minimum: 0
            default: 0
      responses:
        '200':
          description: 'Contract uncles found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EthereumContractUncle'
        '400':
          description: "Invalid 'hash', 'page' or 'pageSize' parameters"
        '404':
          description: 'Contract not found'

  '/{chainName}/tx/{hash}':
    get:
      tags:
        - ethereum
      summary: Find ethereum transaction by its hash
      description: Returns a transaction
      operationId: getTxByHash
      parameters:
        - name: chainName
          in: path
          description: Chain name
          required: true
          schema:
            type: string
            enum:
              - ethereum
              - ethereum_classic
        - name: hash
          in: path
          description: Hash of the transaction
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Transaction found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EthereumTx'
        '400':
          description: 'Invalid transaction hash supplied'
        '404':
          description: 'Transaction not found'

  '/{chainName}/uncle/{hash}':
    get:
      tags:
        - ethereum
      summary: Find ethereum uncle by its hash
      description: Returns an uncle
      operationId: getUncleByHash
      parameters:
        - name: chainName
          in: path
          description: Chain name
          required: true
          schema:
            type: string
            enum:
              - ethereum
              - ethereum_classic
        - name: hash
          in: path
          description: Hash of the uncle
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Uncle found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EthereumUncle'
        '400':
          description: 'Invalid uncle hash supplied'
        '404':
          description: 'Uncle not found'

components:
  schemas:

    EthereumBlock:
      type: object
      properties:
        number:
          type: integer
          format: int64
        hash:
          type: string
        parent_hash:
          type: string
        timestamp:
          type: string
          format: date-time
        sha3Uncles:
          type: string
        logsBloom:
          type: string
        transactionsRoot:
          type: string
        stateRoot:
          type: string
        receiptsRoot:
          type: string
        miner:
          type: string
        difficulty:
          type: number
        totalDifficulty:
          type: number
        extraData:
          type: string
        size:
          type: integer
          format: int64
        gasLimit:
          type: integer
          format: int64
        gasUsed:
          type: integer
          format: int64
        txNumber:
          type: integer
          format: int32
        uncles:
          type: array
          items:
            type: string
        blockReward:
          type: string
        unclesReward:
          type: string
        txFees:
          type: string

    EthereumBlockTx:
      type: object
      properties:
        blockNumber:
          type: integer
          format: int64
        positionInBlock:
          type: integer
          format: int32
        fee:
          type: number
        value:
          type: number
        hash:
          type: string
        from:
          type: string
        to:
          type: string
        createsContract:
          type: boolean

    EthereumContract:
      type: object
      properties:
        hash:
          type: string
        confirmedBalance:
          type: number
        smartContract:
          type: boolean
        confirmedTotalReceived:
          type: number
        txNumber:
          type: integer
          format: int32
        minedUncleNumber:
          type: integer
          format: int32
        firstActivityDate:
          type: string
          format: date-time
        lastActivityDate:
          type: string
          format: date-time
        version:
          type: integer
          format: int64
        kafkaDeltaOffset:
          type: integer
          format: int64
        kafkaDeltaPartition:
          type: integer
          format: int32
        kafkaDeltaTopic:
          type: string
        kafkaDeltaOffsetCommited:
          type: boolean

    EthereumContractTx:
      type: object
      properties:
        contractHash:
          type: string
        blockTime:
          type: string
          format: date-time
        hash:
          type: string
        fee:
          type: number
        from:
          type: string
        to:
          type: string
        value:
          type: string

    EthereumContractBlock:
      type: object
      properties:
        minerContractHash:
          type: string
        blockNumber:
          type: integer
          format: int64
        blockTime:
          type: string
          format: date-time
        blockReward:
          type: number
        unclesReward:
          type: number
        txFees:
          type: number
        txNumber:
          type: integer
          format: int32

    EthereumContractUncle:
      type: object
      properties:
        minerContractHash:
          type: string
        blockNumber:
          type: integer
          format: int64
        hash:
          type: string
        position:
          type: integer
          format: int32
        number:
          type: integer
          format: int64
        timestamp:
          type: string
          format: date-time
        blockTime:
          type: string
          format: date-time
        blockHash:
          type: string
        uncleReward:
          type: number

    EthereumTx:
      type: object
      properties:
        hash:
          type: string
        nonce:
          type: integer
          format: int64
        blockHash:
          type: string
        blockNumber:
          type: integer
          format: int64
        blockTime:
          type: string
          format: date-time
        from:
          type: string
        to:
          type: string
        value:
          type: string
        gasPrice:
          type: number
        gasLimit:
          type: integer
          format: int64
        gasUsed:
          type: integer
          format: int64
        fee:
          type: string
        input:
          type: string
        createdContract:
          type: string

    EthereumUncle:
      type: object
      properties:
        hash:
          type: string
        position:
          type: integer
          format: int32
        number:
          type: integer
          format: int64
        timestamp:
          type: string
          format: date-time
        blockNumber:
          type: integer
          format: int64
        blockTime:
          type: string
          format: date-time
        blockHash:
          type: string
        miner:
          type: string
        uncleReward:
          type: number
