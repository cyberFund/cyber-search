
apply from: "$rootDir/gradle/repositories.gradle"

buildscript {

    ext {
        kotlinVersion = "1.2.41"
        kotlinCoroutinesVersion = "0.22.3"
        jacksonVersion = "2.9.5"
        kafkaVersion = "1.1.0"
        springKafkaVersion = "2.1.6.RELEASE"
        cassandraVersion = "3.5.0"
        springCassandraVersion = "2.0.7.RELEASE"
        springCassandraUnitVersion = "3.3.0.2"
        web3jVersion = "3.4.0"
        rxkotlinVersion = "2.2.0"
        reactorVersion = "3.1.7.RELEASE"
        apacheHttpClientVersion = "4.1.3"
        ehcacheVersion = "3.4.0"
        elasticVersion = "5.5.3"

        // plugins
        dependencyPluginVersion = "1.0.3.RELEASE"
        bootPluginVersion = "2.0.2.RELEASE"
        detektPluginVersion = "1.0.0.RC6-4"

        // tests
        junitVersion = "5.2.0"
        mockitoVersion = "2.8.9"
        mockitoKotlinVersion = "1.5.0"
        assertjVersion = "3.9.0"
        coverallsVersion = "2.8.2"

        // metrics
        micrometerVersion = "1.0.4"

        // logs
        slf4jVersion = "1.7.25"
        lockbackVersion = "1.2.3"
    }

    repositories {
        maven {
            url "$rootDir/libs"
        }
        mavenCentral()
        jcenter()
        maven { url 'https://dl.bintray.com/kotlin/kotlin-dev/' }
        maven { url 'https://repo.spring.io/libs-snapshot' }
        maven { url 'https://repo.spring.io/libs-milestone' }
        maven { url 'https://plugins.gradle.org/m2/' }
        maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
    }

    dependencies {
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion")
        classpath "org.jetbrains.kotlin:kotlin-noarg:$kotlinVersion"
        classpath("org.jetbrains.kotlin:kotlin-allopen:$kotlinVersion")

        classpath("io.spring.gradle:dependency-management-plugin:$dependencyPluginVersion")
        classpath("org.springframework.boot:spring-boot-gradle-plugin:$bootPluginVersion")
        classpath("gradle.plugin.io.gitlab.arturbosch.detekt:detekt-gradle-plugin:$detektPluginVersion")
        classpath("org.kt3k.gradle.plugin:coveralls-gradle-plugin:$coverallsVersion")
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.8'
    distributionType = Wrapper.DistributionType.ALL
}

subprojects {

    apply plugin: "io.spring.dependency-management"
    apply from: "$rootDir/gradle/kotlin.gradle"
    apply from: "$rootDir/gradle/coverage-subprojects.gradle"
    apply from: "$rootDir/gradle/dependency-management.gradle"
    apply from: "$rootDir/gradle/repositories.gradle"

    test {
        useJUnitPlatform()
    }

    dependencies {

        testCompile("org.mockito:mockito-core")
        testCompile("com.nhaarman:mockito-kotlin")

        testCompile("org.assertj:assertj-core")

        testCompile("io.projectreactor:reactor-test")

        testCompile("org.junit.jupiter:junit-jupiter-api")
        testRuntime("org.junit.jupiter:junit-jupiter-engine")

        testCompile 'org.springframework:spring-test'
        testCompile('log4j:log4j:1.2.17') // https://github.com/spring-projects/spring-kafka/issues/422

        testCompile 'org.springframework.kafka:spring-kafka-test'
        testCompile "org.springframework.kafka:spring-kafka"
        testCompile "org.apache.kafka:kafka-clients"
        testCompile 'org.apache.kafka:kafka_2.11'

        testCompile 'org.cassandraunit:cassandra-unit-spring'
    }
}

project(":common") {

    dependencies {
        compile("org.slf4j:slf4j-api")
        compile("ch.qos.logback:logback-classic")

        compile("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
        compile("org.jetbrains.kotlin:kotlin-reflect")


        compile("com.fasterxml.jackson.core:jackson-databind")
        compile("com.fasterxml.jackson.core:jackson-annotations")
        compile("com.fasterxml.jackson.module:jackson-module-kotlin")
        compile("com.fasterxml.jackson.datatype:jackson-datatype-jdk8")
        compile("com.fasterxml.jackson.datatype:jackson-datatype-jsr310")

        //dependencies for jaxb
        compile 'javax.xml.bind:jaxb-api:2.3.0' // still needed?
        compile 'org.glassfish.jaxb:jaxb-runtime:2.3.0'
        compile 'javax.activation:activation:1.1.1'

        compile "javax.annotation:javax.annotation-api:1.3.2"
    }
}

project(":common-kafka") {

    dependencies {

        compile project(":common")

        compile "org.springframework.kafka:spring-kafka"
        compile "org.apache.kafka:kafka-clients"
    }
}

project(":search-api") {

    apply plugin: "org.springframework.boot"

    dependencies {

        compile project(":common")
        compile project(":cassandra-service")

        compile 'org.springframework.boot:spring-boot-starter'
        compile 'org.springframework.boot:spring-boot-starter-webflux'
        compile 'org.springframework.boot:spring-boot-starter-reactor-netty'
        compile 'org.springframework.boot:spring-boot-starter-actuator'
        compile 'io.micrometer:micrometer-registry-prometheus'
        compile 'io.micrometer:micrometer-core'
        compile 'com.strapdata.elasticsearch:elasticsearch:5.5.0'
        compile 'com.strapdata.elasticsearch.client:transport:5.5.0'
    }
}

apply from: 'gradle/detekt.gradle'
apply from: 'gradle/coverage.gradle'
