/* Gradle plugins part */
buildscript {
    ext {
        kotlinVersion = "1.2.41"
        kotlinCoroutinesVersion = "0.22.3"
        jacksonVersion = "2.9.2"
        kafkaVersion = "1.0.1"
        springKafkaVersion = "2.1.4.RELEASE"
        cassandraVersion = "3.5.0"
        springCassandraVersion = "2.0.7.RELEASE"
        web3jVersion = "3.4.0"
        rxkotlinVersion = "2.2.0"
        reactorVersion = "3.1.7.RELEASE"
        apacheHttpClientVersion = "4.1.3"
        ehcacheVersion = "3.4.0"
        elasticVersion = "5.5.3"

        // plugins
        dependencyPluginVersion = "1.0.3.RELEASE"
        bootPluginVersion = "2.0.2.RELEASE"
        detektPluginVersion = "1.0.0.RC6-4"

        // tests
        junitVersion = "5.2.0"
        junitPlatformVersion = "1.2.0"
        mockitoVersion = "2.1.0"
        mockitoKotlinVersion = "0.7.0"
        assertjVersion = "3.9.0"

        // metrics
        micrometerVersion = "1.0.0"

        // logs
        slf4jVersion = "1.7.25"
        lockbackVersion = "1.2.3"
    }

    repositories {
        mavenCentral()
        jcenter()
        maven { url 'https://dl.bintray.com/kotlin/kotlin-dev/' }
        maven { url 'https://repo.spring.io/libs-snapshot' }
        maven { url 'https://repo.spring.io/libs-milestone' }
        maven { url 'https://plugins.gradle.org/m2/' }
    }

    dependencies {
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion")
        classpath "org.jetbrains.kotlin:kotlin-noarg:$kotlinVersion"
        classpath("org.jetbrains.kotlin:kotlin-allopen:$kotlinVersion")

        classpath("org.junit.platform:junit-platform-gradle-plugin:$junitPlatformVersion")

        classpath("io.spring.gradle:dependency-management-plugin:$dependencyPluginVersion")
        classpath("org.springframework.boot:spring-boot-gradle-plugin:$bootPluginVersion")
        classpath("gradle.plugin.io.gitlab.arturbosch.detekt:detekt-gradle-plugin:$detektPluginVersion")
        classpath("org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.8.2")
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.3.1'
    distributionType = Wrapper.DistributionType.ALL
}

task build {
    dependsOn "detektCheck"
}

allprojects {

    buildscript {
        repositories {
            maven { url 'https://plugins.gradle.org/m2/' }
        }
    }

    apply plugin: "io.gitlab.arturbosch.detekt"

    detekt {
        profile("main") {
            config = "$rootDir/detekt.yml"
            filters = ".*/pumps-old/.*"
            parallel = true
        }
    }
}

subprojects {
    apply plugin: "kotlin"
    apply plugin: 'kotlin-spring'
    apply plugin: "org.junit.platform.gradle.plugin"
    apply plugin: "io.spring.dependency-management"

    apply from: "$rootDir/gradle/coverage-subprojects.gradle"

    compileKotlin {
        kotlinOptions {
            freeCompilerArgs = ["-Xjsr305=strict"]
            jvmTarget = "1.8"
        }
    }
    compileTestKotlin {
        kotlinOptions {
            freeCompilerArgs = ["-Xjsr305=strict"]
            jvmTarget = "1.8"
        }
    }

    kotlin {
        experimental {
            coroutines "enable"
        }
    }

    repositories {
        jcenter()
        mavenCentral()
        maven { url 'https://repo.spring.io/libs-milestone' }
        maven { url 'https://repo.spring.io/libs-snapshot' }
    }

    dependencyManagement {
        dependencies {
            imports {
                mavenBom "org.springframework.boot:spring-boot-starter-parent:$bootPluginVersion"
            }
            dependency("org.slf4j:slf4j-api:$slf4jVersion")
            dependency("ch.qos.logback:logback-classic:$lockbackVersion")

            dependency("org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion")
            dependency("org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion")
            dependency("org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion")
            dependency("org.jetbrains.kotlinx:kotlinx-coroutines-jdk8:$kotlinCoroutinesVersion")

            dependency("com.fasterxml.jackson.core:jackson-databind:$jacksonVersion")
            dependency("com.fasterxml.jackson.core:jackson-annotations:$jacksonVersion")
            dependency("com.fasterxml.jackson.module:jackson-module-kotlin:$jacksonVersion") {
                exclude 'org.jetbrains.kotlin:kotlin-stdlib'
            }
            dependency("com.fasterxml.jackson.datatype:jackson-datatype-jdk8:$jacksonVersion")
            dependency("com.fasterxml.jackson.datatype:jackson-datatype-jsr310:$jacksonVersion")

            dependency("org.apache.httpcomponents:httpasyncclient:$apacheHttpClientVersion")

            dependency "org.springframework.kafka:spring-kafka:$springKafkaVersion"
            dependency "org.springframework.kafka:spring-kafka-test:$springKafkaVersion"
            dependency("org.apache.kafka:kafka-clients:$kafkaVersion")
            dependency("org.apache.kafka:kafka-streams:$kafkaVersion")
            dependency("org.apache.kafka:connect-api:$kafkaVersion")

            dependency("org.junit.jupiter:junit-jupiter-api:$junitVersion")
            dependency("org.junit.platform:junit-platform-launcher:$junitPlatformVersion")
            dependency("org.junit.jupiter:junit-jupiter-engine:$junitVersion")
            dependency("org.mockito:mockito-core:$mockitoVersion")
            dependency("org.assertj:assertj-core:$assertjVersion")
            dependency("com.nhaarman:mockito-kotlin:$mockitoKotlinVersion") {
                exclude 'org.jetbrains.kotlin:kotlin-stdlib'
            }

            dependency("org.ehcache:ehcache:$ehcacheVersion")
            dependency("org.elasticsearch.client:transport:$elasticVersion")

            dependency "org.springframework.data:spring-data-cassandra:$springCassandraVersion"
            dependency "org.springframework.data:spring-data-commons:$springCassandraVersion"
            dependency("com.datastax.cassandra:cassandra-driver-core:$cassandraVersion")
            dependency("com.datastax.cassandra:cassandra-driver-mapping:$cassandraVersion")
            dependency("com.datastax.cassandra:cassandra-driver-extras:$cassandraVersion")

            dependency("org.web3j:core:$web3jVersion")
            dependency("org.web3j:parity:$web3jVersion")
            dependency("io.reactivex.rxjava2:rxkotlin:$rxkotlinVersion") {
                exclude 'org.jetbrains.kotlin:kotlin-stdlib'
            }
            dependency("io.projectreactor:reactor-core:$reactorVersion")

            dependency("io.micrometer:micrometer-core:$micrometerVersion")
            dependency("io.micrometer:micrometer-registry-prometheus:$micrometerVersion")
        }
    }

    dependencies {
        testCompile("org.junit.jupiter:junit-jupiter-api")
        testCompile("org.junit.platform:junit-platform-launcher")
        testCompile("org.mockito:mockito-core")
        testCompile("com.nhaarman:mockito-kotlin")
        testCompile("org.assertj:assertj-core")
        testRuntime("org.junit.jupiter:junit-jupiter-engine")
    }
}


project(":common") {

    dependencies {
        compile("org.slf4j:slf4j-api")
        compile("ch.qos.logback:logback-classic")

        compile("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
        compile("org.jetbrains.kotlin:kotlin-reflect")


        compile("com.fasterxml.jackson.core:jackson-databind")
        compile("com.fasterxml.jackson.core:jackson-annotations")
        compile("com.fasterxml.jackson.module:jackson-module-kotlin")
        compile("com.fasterxml.jackson.datatype:jackson-datatype-jdk8")
        compile("com.fasterxml.jackson.datatype:jackson-datatype-jsr310")

        //dependencies for jaxb
        compile 'javax.xml.bind:jaxb-api:2.3.0'
        compile 'org.glassfish.jaxb:jaxb-runtime:2.3.0'
        compile 'javax.activation:activation:1.1.1'
    }
}

project(":common-kafka") {

    dependencies {

        compile project(":common")

        compile "org.springframework.kafka:spring-kafka"

        testCompile 'org.springframework:spring-test'
        testCompile 'org.springframework.kafka:spring-kafka-test'
    }
}

project(":cassandra-service") {

    dependencies {

        compile project(":common")

        //https://jira.spring.io/browse/DATACMNS-1245 bug
        compile 'org.springframework.data:spring-data-cassandra'
        compile "io.projectreactor:reactor-core"
        compile 'org.apache.httpcomponents:httpasyncclient'

        compile("com.datastax.cassandra:cassandra-driver-core")
        compile("com.datastax.cassandra:cassandra-driver-mapping")
        compile("com.datastax.cassandra:cassandra-driver-extras")
    }
}


project(":search-api") {

    apply plugin: "org.springframework.boot"

    dependencies {

        compile project(":common")
        compile project(":cassandra-service")

        compile 'org.springframework.boot:spring-boot-starter'
        compile 'org.springframework.boot:spring-boot-starter-webflux'
        compile 'org.springframework.boot:spring-boot-starter-reactor-netty'
        compile 'org.springframework.boot:spring-boot-starter-actuator'
        compile 'org.elasticsearch.client:transport'
        compile 'io.micrometer:micrometer-registry-prometheus'
        compile 'io.micrometer:micrometer-core'
    }
}

apply from: 'gradle/coverage.gradle'